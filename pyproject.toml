[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "visionary"
version = "0.1.0"
description = "A comprehensive computer vision library for object detection, tracking, and video processing"
authors = [
    {name = "R1M1", email = "r1m1@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = [
    "computer-vision",
    "object-detection", 
    "tracking",
    "annotation",
    "machine-learning",
    "deep-learning",
    "video-processing",
    "yolo",
    "ultralytics"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "Pillow>=8.3.0",
    "pydantic>=2.0.0",
    "tqdm>=4.62.0",
    "requests>=2.25.0",
    "pyyaml>=6.0",
    "ultralytics>=8.0.0"
]

[project.optional-dependencies]
torch = ["torch>=1.11.0", "torchvision>=0.12.0"]
onnx = ["onnxruntime>=1.12.0"]
transformers = ["transformers>=4.20.0"]
video = ["ffmpeg-python>=0.2.0", "imageio>=2.25.0"]
viz = ["matplotlib>=3.4.0", "seaborn>=0.11.0", "plotly>=5.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
all = [
    "visionary[torch,onnx,transformers,video,viz]"
]

[project.urls]
Homepage = "https://github.com/R1M1/visionary"
Documentation = "https://github.com/R1M1/visionary#readme"
Repository = "https://github.com/R1M1/visionary"
"Bug Tracker" = "https://github.com/R1M1/visionary/issues"
Changelog = "https://github.com/R1M1/visionary/blob/main/CHANGELOG.md"

[project.scripts]
visionary = "visionary.cli:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
visionary = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=visionary",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["visionary"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
